/*
* This build file was auto generated by running the Gradle 'init' task
* by 'ashleyhuey' at '1/9/17 1:13 PM' with Gradle 3.0
*
* This generated file contains a sample Java project to get you started.
* For more details take a look at the Java Quickstart chapter in the Gradle
* user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
*/

plugins {
    id 'java'
    id 'idea'
}

version = '0.0.0'
group = 'org.warnermedia.aspera'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven {
        url "https://atom-git.turner.com/api/v4/projects/814/packages/maven"
        name "GitLab"
        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = "hrQSxzoyghzkyNFhxiQV"
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
    maven {
        url "https://atom-git.turner.com/api/v4/projects/1702/packages/maven"
        name "GitLab"
        credentials(HttpHeaderCredentials) {
            name = 'Private-Token'
            value = 'd5AfrHeyeRtyBBH1iPxV'
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
    maven {
        url "https://atom-git.turner.com/api/v4/projects/1544/packages/maven"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:4.7.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'org.testng:testng:6.7'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.yaml:snakeyaml:1.33'
    implementation 'com.warnermedia:automation.security:1.3.9'
    implementation 'javax.json:javax.json-api:1.1.4'
    implementation 'org.hamcrest:hamcrest-all:1.3'
    implementation 'dev:automation.base:7.28.45'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'org.brotli:dec:0.1.2'
    implementation 'org.apache.commons:commons-compress:1.21'
    implementation 'org.mongodb:mongodb-driver-legacy:4.8.1'
    implementation 'org.json:json:20220924'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'com.google.googlejavaformat:google-java-format:1.15.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'org.assertj:assertj-core:3.24.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

version = 1.0


sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
    }
    test {
        java {
            srcDir 'src/test'
        }
    }
}

test {
    useTestNG() {
        //outputs.dir file('Results')
        testLogging.showStandardStreams = true
    }
}

clean {
    dependsOn cleanTest
}



